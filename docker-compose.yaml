services:
    poll:
        build: ./poll
        ports:
            - "5000:80"
        restart: always
        environment:
            REDIS_HOST: redis
        depends_on:
            - redis
        networks:
            - poll-tier

    redis:
        image: redis:7
        ports:
            - "6379:6379"
        restart: always
        networks:
            - poll-tier
            - back-tier

    worker:
        build: ./worker
        restart: always
        environment:
            REDIS_HOST: redis
            POSTGRES_DB: "pollDB"
            POSTGRES_USER: "postgresUser"
            POSTGRES_PASSWORD: "psqlword"
            POSTGRES_HOST: db
            POSTGRES_PORT: "5432"
        depends_on:
            - db
            - redis
        networks:
            - back-tier

    db:
        image: postgres:16
        environment:
            POSTGRES_DB: "pollDB"
            POSTGRES_USER: "postgresUser"
            POSTGRES_PASSWORD: "psqlword"
        restart: always
        networks:
            - back-tier
            - result-tier
        volumes:
            - db-data:/var/lib/postgresql/data
            - ./init-db/schema.sql:/docker-entrypoint-initdb.d/schema.sql

    result:
        build: ./result
        ports:
            - "5001:80"
        restart: always
        environment:
            POSTGRES_DB: "pollDB"
            POSTGRES_USER: "postgresUser"
            POSTGRES_PASSWORD: "psqlword"
            POSTGRES_HOST: db
            POSTGRES_PORT: "5432"
        depends_on:
            - db
        networks:
            - result-tier

networks:
    poll-tier:
        driver: bridge

    back-tier:
        driver: bridge

    result-tier:
        driver: bridge

volumes:
    db-data:


